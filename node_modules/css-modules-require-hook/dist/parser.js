'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _postcss = require('postcss');

var _lodashForeach = require('lodash.foreach');

var _lodashForeach2 = _interopRequireDefault(_lodashForeach);

var _icssReplaceSymbols = require('icss-replace-symbols');

var _icssReplaceSymbols2 = _interopRequireDefault(_icssReplaceSymbols);

var importRegexp = /^:import\((.+)\)$/;
var exportRegexp = /^:export$/;

/**
 * @param  {function} options.fetch
 * @return {function}
 */
exports['default'] = (0, _postcss.plugin)('parser', function parser() {
  var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  var fetch = _ref.fetch;

  return function (css) {
    // https://github.com/postcss/postcss/blob/master/docs/api.md#inputfile
    var file = css.source.input.file;
    var translations = {};
    var exportTokens = {};

    css.walkRules(importRegexp, function (rule) {
      var exports = fetch(RegExp.$1, file);

      rule.walkDecls(function (decl) {
        return translations[decl.prop] = exports[decl.value];
      });
      rule.remove();
    });

    (0, _icssReplaceSymbols2['default'])(css, translations);

    css.walkRules(exportRegexp, function (rule) {
      rule.walkDecls(function (decl) {
        (0, _lodashForeach2['default'])(translations, function (value, key) {
          return decl.value = decl.value.replace(key, value);
        });
        exportTokens[decl.prop] = decl.value;
      });

      rule.remove();
    });

    css.tokens = exportTokens;
  };
});
module.exports = exports['default'];